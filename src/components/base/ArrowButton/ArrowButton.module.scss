@use '@base-styles-variables/colors' as c;
@use '@base-styles-mixins/common' as cmn;
@use '@base-styles-mixins/animations' as a;
@use './variables.scss' as v;

.arrow-btn {
    @include cmn.button-reset;

    width: v.$button-width;
    height: v.$button-height;
    fill: c.$brown-dark;

    &.m-left {
        transform: rotate(180deg);
    }

    &.m-right {
        transform: rotate(0deg);
    }

    &[disabled] {
        cursor: default;
        opacity: 0.5;
    }

    &:not([disabled]) {
        &:hover,
        &:focus-visible {
            fill: c.$brown;

            &.m-left {
                .gear-img {
                    @include a.gear-counterclockwise-rotate;
                }
            }

            &.m-right {
                .gear-img {
                    @include a.gear-clockwise-rotate;
                }
            }

            @media (prefers-reduced-motion) {
                &.m-left,
                &.m-right {
                    .gear-img {
                        animation: none;
                    }
                }
            }
        }

        &:active {
            fill: c.$red;
        }
    }
}

.gear-img {
    position: absolute;
    top: 0;
    bottom: 0;
    left: 0;
    display: inline-block;
    width: v.$gear-dimension;
    height: v.$gear-dimension;
    margin: auto 0; // Centralize vertically through margin to keep 'transform' changing for rotate animation
}

.triangle-img {
    position: absolute;
    top: 50%;
    right: 0;
    display: inline-block;
    width: v.$triangle-width;
    height: v.$triangle-height;
    transform: translateY(-50%);
}
