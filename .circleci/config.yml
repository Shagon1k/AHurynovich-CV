version: 2.1
jobs:
  install-packages:
    docker:
      - image: cimg/node:17.0.1
    steps:
      - checkout
      - restore_cache:
          key: packages-cache-{{ checksum "package-lock.json" }}
      - run:
          name: Install packages
          command: npm install
      - save_cache:
          key: packages-cache-{{ checksum "package-lock.json" }}
          paths:
            - node_modules
  test:
    docker:
      - image: cimg/node:17.0.1
    steps:
      - checkout
      - restore_cache:
          key: packages-cache-{{ checksum "package-lock.json" }}
      - run:
          name: Linting
          command: npm run lint
      - run:
          name: Testing
          command: npm run test
  build-clean:
    docker:
      - image: cimg/node:17.0.1
    steps:
      - checkout
      - restore_cache:
          key: packages-cache-{{ checksum "package-lock.json" }}
      - run:
          name: Build Clean
          command: npm run build:clean
  build:
    docker:
      - image: cimg/node:17.0.1
    steps:
      - checkout
      - restore_cache:
          key: packages-cache-{{ checksum "package-lock.json" }}
      - run:
          name: Building
          command: npm run build:client:prod
      - save_cache:
          key: build-cache-ahurynovich-cv
          paths:
            - node_modules
            - dist
  deploy:
    docker:
      - image: cimg/node:17.0.1
    steps:
      - checkout
      - restore_cache:
          key: build-cache-ahurynovich-cv
      - run:
          name: Deploy
          command: echo "hello world"

workflows:
  version: 2.1
  Test, Build and Deploy if needed:
    jobs:
      - install-packages
      - test:
          requires:
            - install-packages
      - build-clean:
          requires:
            - install-packages
      - build:
          requires:
            - test
            - build-clean
      - hold:
          type: approval
          requires:
            - build
            - test
          filters:
            branches:
              only:
                - main
      - deploy:
          requires:
            - hold


