version: 2.1
orbs:
  aws-cli: circleci/aws-cli@2.0
jobs:
  install-packages:
    docker:
      - image: cimg/node:16.11.1
    steps:
      - checkout
      - restore_cache:
          key: package-cache-{{ checksum "package-lock.json" }}
      - run:
          name: Install packages
          command: npm install
      - save_cache:
          key: package-cache-{{ checksum "package-lock.json" }}
          paths:
            - node_modules
  lint:
    docker:
      - image: cimg/node:16.11.1
    steps:
      - checkout
      - restore_cache:
          key: package-cache-{{ checksum "package-lock.json" }}
      - run:
          name: Linting
          command: npm run lint
  test-unit-integration:
    docker:
      - image: cimg/node:16.11.1
    steps:
      - checkout
      - restore_cache:
          key: package-cache-{{ checksum "package-lock.json" }}
      - run:
          name: Testing (Unit and Integration Tests)
          command: npm run test:ci
  test-unit-integration-verbose:
    docker:
      - image: cimg/node:16.11.1
    steps:
      - checkout
      - restore_cache:
          key: package-cache-{{ checksum "package-lock.json" }}
      - run:
          name: Testing (Unit and Integration Tests)
          command: npm run test:ci:verbose
      - store_test_results:
          path: junit
  test-sca:
    docker:
      - image: cimg/node:16.11.1
    steps:
      - checkout
      - restore_cache:
          key: package-cache-{{ checksum "package-lock.json" }}
      - run:
          name: Snyk Authentication
          command: npm run sca:auth $SNYK_TOKEN
      - run:
          name: Code Vulnerabilities Scan
          command: npm run sca:test
  build-clean-app:
    docker:
      - image: cimg/node:16.11.1
    steps:
      - checkout
      - restore_cache:
          key: package-cache-{{ checksum "package-lock.json" }}
      - run:
          name: Cleaning previous Application Build
          command: npm run build:clean
  build-app:
    docker:
      - image: cimg/node:16.11.1
    steps:
      - checkout
      - restore_cache:
          key: package-cache-{{ checksum "package-lock.json" }}
      - run:
          name: Building Application
          command: npm run build:client:prod
      - persist_to_workspace:
          root: .
          paths:
            - 'dist'
  deploy-app:
    docker:
      - image: cimg/node:16.11.1
    steps:
      - aws-cli/setup:
          profile-name: AHurynovichCV_Profile
          aws-access-key-id: AWS_ACCESS_KEY_ID
          aws-region: AWS_REGION
          aws-secret-access-key: AWS_SECRET_ACCESS_KEY
      - checkout
      - restore_cache:
          key: package-cache-{{ checksum "package-lock.json" }}
      - attach_workspace:
            at: .
      - run:
          name: Deploying Application
          command: npm run deploy:s3
  build-components-library:
    docker:
      - image: cimg/node:16.11.1
    steps:
      - checkout
      - restore_cache:
          key: package-cache-{{ checksum "package-lock.json" }}
      - run:
          name: Cleaning previous Components Library Build
          command: npm run storybook:build:clean
      - run:
          name: Building Components Library
          command: npm run storybook:build
      - persist_to_workspace:
          root: .
          paths:
            - 'storybook-static'
  deploy-components-library:
    docker:
      - image: cimg/node:16.11.1
    steps:
      - aws-cli/setup:
          profile-name: AHurynovichCV_Profile
          aws-access-key-id: AWS_ACCESS_KEY_ID
          aws-region: AWS_REGION
          aws-secret-access-key: AWS_SECRET_ACCESS_KEY
      - checkout
      - restore_cache:
          key: package-cache-{{ checksum "package-lock.json" }}
      - attach_workspace:
            at: .
      - run:
          name: Deploying Components Library
          command: npm run storybook:deploy:s3

workflows:
  version: 2.1
  Common workflow:
    jobs:
      - install-packages:
          filters:
            branches:
              ignore:
                - main
                - develop
      - lint:
          requires:
            - install-packages
          filters:
            branches:
              ignore:
                - main
                - develop
      - test-unit-integration-verbose:
          requires:
            - install-packages
          filters:
            branches:
              ignore:
                - main
                - develop
  Pre-commitment (develop) workflow:
    jobs:
      - install-packages:
          filters:
            branches:
              only:
                - develop
      - lint:
          requires:
            - install-packages
          filters:
            branches:
              only:
                - develop
      - test-unit-integration:
          requires:
            - install-packages
          filters:
            branches:
              only:
                - develop
      - build-clean-app:
          requires:
            - install-packages
          filters:
            branches:
              only:
                - develop
      - build-app:
          requires:
            - lint
            - test-unit-integration
            - build-clean-app
          filters:
            branches:
              only:
                - develop
  Commitment (main) workflow:
    jobs:
      - install-packages:
          filters:
            branches:
              only:
                - main
      - lint:
          requires:
            - install-packages
          filters:
            branches:
              only:
                - main
      - test-unit-integration:
          requires:
            - install-packages
          filters:
            branches:
              only:
                - main
      - test-sca:
          requires:
            - install-packages
          filters:
            branches:
              only:
                - main
      - build-clean-app:
          requires:
            - install-packages
          filters:
            branches:
              only:
                - main
      - build-app:
          requires:
            - lint
            - test-unit-integration
            - test-sca
            - build-clean-app
          filters:
            branches:
              only:
                - main
      - hold-deploy-app:
          name: -approve-app-deploy-
          type: approval
          requires:
            - build-app
          filters:
            branches:
              only:
                - main
      - deploy-app:
          requires:
            - -approve-app-deploy-
          filters:
            branches:
              only:
                - main
      - hold-deploy-components-library:
          type: approval
          name: -approve-components-lib-deploy-
          filters:
            branches:
              only:
                - main
      - build-components-library:
          requires:
            - -approve-components-lib-deploy-
          filters:
            branches:
              only:
                - main
      - deploy-components-library:
          requires:
            - build-components-library
          filters:
            branches:
              only:
                - main
